name: FedRAMP-low
standards:
  NIST-800-53:
    AC-1:
      justifications:
      - name: Access Control Policies for 18F
        narative: 18F policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      - name: User Account and Authentication LDAP Integration
        narative: Cloud Foundry integrates with an organization's Identity Provider
          (IDP) which dictates further account management policies.
        references:
        - name: UAA-LDAP Documentation
          url: https://github.com/cloudfoundry/uaa/blob/master/docs/UAA-LDAP.md
      meta:
        name: Access Control Policy and Procedures
    AC-14:
      meta:
        name: Permitted Actions Without Identification or Authentication
    AC-17:
      meta:
        name: Remote Access
    AC-18:
      meta:
        name: Wireless Access
    AC-19:
      meta:
        name: Access Control For Mobile Devices
    AC-2:
      justifications:
      - name: Amazon Elastic Block Store
        narative:
          a: '- Elastic Block Storage access is managed through the use of IAM Roles
            which grant IAM permissions to create, access, and manage block level
            storage using the following interfaces AWS Management Console and the
            AWS CLI.

            '
          g: '- 18F has implemented AWS CloudWatch for its system account monitoring.
            It allows 18F to monitor AWS resources in near real-time, including Amazon
            EC2 instances, Amazon EBS volumes, Elastic Load Balancers, and Amazon
            RDS DB instances. Metrics such as CPU utilization, latency, and request
            counts are provided automatically for these AWS resources. It allows 18F
            to supply logs or custom application and system metrics, such as memory
            usage, transaction volumes, or error rates.

            '
        references:
        - name: Amazon Elastic Block Store
          url: https://aws.amazon.com/ebs/
      - name: Amazon Elastic Compute Cloud
        narative:
          a: '- Access to Amazon EC2 Linux instances are managed by the use of EC2
            key pairs and using SSH to access the local instance on the individual
            Linux, or appliance instance. Account types include individual user and
            system/application user accounts. Shared or group accounts are not permitted
            outside of default accounts such as local Administrators or root. There
            are no guest/anonymous or temporary user accounts.

            - Operating System user groups are documented in section 9.1 Types of
            Users.

            - Initial Linux local root access is provided to AWS administrator account
            users only if they provide the key pair assigned to the Linux EC2 instance
            and login using SSH.

            '
          f: '- Local system user account establishment, activation, modification,
            disablement or removal requires approval by the managing 18F project lead
            and Cloud Foundry Information System Technical Point of Contact (Operating
            Environment).

            '
          g: '- 18F has implemented AWS CloudWatch for basic monitoring of Amazon
            EC2 instances. Basic Monitoring for Amazon EC2 instances: Seven pre-selected
            metrics at five-minute frequency and three status check metrics at one-minute
            frequency.

            - 18F has implemented Detailed Monitoring for Amazon EC2 instances: All
            metrics available to Basic Monitoring at one-minute frequency. Instances
            with Detailed Monitoring enabled allow data aggregation by Amazon EC2
            AMI ID and instance type.

            - 18F has implemented the use of Auto Scaling and Elastic Load Balancing
            where Amazon CloudWatch provides Amazon EC2 instance metrics aggregated
            by Auto Scaling groups and Elastic Load Balancers.

            - Monitoring data is retained for two weeks, even if AWS resources have
            been terminated. This enables 18F to quickly look back at the metrics
            preceding an event of interest.

            - Metrics are accessed in either the Amazon EC2 tab or the Amazon CloudWatch
            tab of the AWS Management Console, or by using the Amazon CloudWatch API.

            '
          h: '- Local system user accounts will be deactivated immediately on receipt
            of notification of an email from the managing 18F project lead or at a
            future date as directed.

            - User accounts will be monitored monthly and accounts will be disabled
            after 90 days of inactivity.

            '
          i: '- System access to local EC2 instance accounts is provided only to those
            with an established need to manage servers in the Cloud Foundry environment.
            User group membership is restricted to the least privilege necessary for
            the user to accomplish their assigned duties

            '
          j: '- User accounts will be monitored monthly and accounts will be disabled
            after 90 days of inactivity.

            - Linux accounts will be monitored via scripts which query the last logon
            date/time of each user account and provide the results in the form of
            a CSV file which an authorized administrator will use for the basis of
            disablement.

            - Application accounts will be monitored monthly and accounts will be
            disabled after 90 days of inactivity; this will be a manual review process,
            but the disablement will be automatic.

            '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - governors:
        - name: Roles Used by 18F
          url: Find artifact
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Account Management Flow
          url: Find artifact
        name: Identity and Access Management
        narative:
          a: "- AWS accounts are managed through AWS Identity and Access Management\
            \ (IAM). Only users with a need to operate the AWS management console\
            \ are provided individual AWS user accounts. The following types are used\n\
            \  - User \u2013 Individual IAM accounts\n  - System \u2013 system and\
            \ application account not used for interactive access\n  - There are no\
            \ guest/anonymous, groups, or temporary user accounts in 18F\u2019s AWS\
            \ account.\n- 18F users must sign in to the account's sign in URL by using\
            \ their IAM user name and password. This sign in URL is located in the\
            \ Dashboard of the IAM console and must be communicated by the 18F AWS\
            \ account's system administrator to the IAM user.\n- To allow an IAM user\
            \ to access resources and perform tasks, 18F creates IAM policies that\
            \ grant IAM users permission to use the specific resources and API actions\
            \ they'll need, then attach the policy to the IAM user or the group the\
            \ IAM user belongs to. When you attach a policy to a user or group of\
            \ users, it allows or denies the users permission to perform the specified\
            \ tasks on the specified resources.\n- AWS user accounts and roles are\
            \ documented in section 9.1 Types of Users.\n- AWS accounts are managed\
            \ through AWS Identity and Access Management (IAM).\n"
          b: "- AWS user accounts are issued only to those with an established need\
            \ to manage the AWS environment based on job function.\n- Linux and/or\
            \ local system user accounts are issued only to those with an established\
            \ need to manage servers in the 18F AWS environment. User group membership\
            \ is restricted to the least privilege necessary for the user to accomplish\
            \ his or her assigned duties.\n- 18F and GSA identify authorized users\
            \ of the information system and specify access rights/privileges. 18F\
            \ grants access to the information system based on:\n  - (i) a valid need-to-know/need-to-share\
            \ that is determined by assigned official duties and satisfying all personnel\
            \ security criteria;\n  - (ii) Intended system usage. 18F and GSA require\
            \ proper identification for requests to establish information system accounts\
            \ and approves all such requests; and\n  - (iii) Organizational or mission/business\
            \ function attributes.\n"
          c: "- Conditions for groups and roles membership in AWS groups are based\
            \ on an established need to manage the AWS environment.  The user must\
            \ meet the following the conditions on order for the system owner to approve\
            \ membership request\n- The user\u2019s assigned role is required to access\
            \ a particular group\n- The user has the requirements and understanding\
            \ to assume permissions associated with the group\n- The user has completed\
            \ the security role-based training\n- The user complies with any other\
            \ group-specific conditions created by the system owner\n"
          d: '- AWS user account creation requires approval by the managing 18F project
            lead and Cloud Foundry Information System Technical Point of Contact (Operating
            Environment). Prior to account creation users must have at least begun
            the GSA background investigative process.

            '
          e: '- AWS user account creation requires approval by the managing 18F project
            lead and Cloud Foundry Information System Technical Point of Contact (Operating
            Environment). Prior to account creation users must have at least begun
            the GSA background investigative process and basic security training.

            '
          k: '- 18F does not allow shared/group account credentials within the AWS
            environment. All users have individual accounts to access the AWS environment.
            18F has created specific policies that allow individual users to assume
            a role within the AWS environment listed in Table 9-1. AWS User Roles,
            Groups and Privileges.

            '
        references:
        - name: AWS Identity and Access Management (IAM)
          url: https://aws.amazon.com/iam/
      - name: S3
        narative:
          a: All Amazon S3 resources including buckets, objects, and related sub-resources
            (for example, lifecycle configuration and website configuration) are private,
            only the resource owner, an AWS account that created it, can access the
            resource through IAM policies granted to it.
        references:
        - name: Amazon S3
          url: https://aws.amazon.com/s3/
      - name: Application Security Groups
        narative:
          a: "- Cloud Foundry uses Application security groups (ASGs) to act as virtual\
            \ firewalls to control outbound traffic from the applications in the deployment.\
            \ A security group consists of a list of network egress access rules.\n\
            - An administrator can assign one or more security groups to a Cloud Foundry\
            \ deployment or to a specific space in an org within a deployment.\n-\
            \ Cloud Foundry user, organization, and application roles and security\
            \ groups are documented in section 9.3 Types of Users. \n"
        references:
        - name: Application Security Groups
          url: http://docs.cloudfoundry.org/adminguide/app-sec-groups.html
      - governors:
        - name: Loggregator Diagram
          url: https://raw.githubusercontent.com/cloudfoundry/loggregator/develop/docs/loggregator.png
        name: Loggregator
        narative:
          g: "- 18F uses Steno for Cloud Foundry account logging. Steno is a shared\
            \ logging service between the DEA, Cloud Controller and Cloud Foundry\
            \ components that share a common interface for configuring logs. \n- Loggregator\
            \ also referred to as Doppler in newer versions of cf, is the Cloud Foundry\
            \ component responsible for logging, and provides a stream of log output\
            \ from 18F applications and from Cloud Foundry system components that\
            \ interact with applications during updates and execution. Loggregator\
            \ allows users to:\n  - Tail their application logs.\n  - Dump a recent\
            \ set of application logs (where recent is a configurable number of log\
            \ packets).\n  - Continually drain their application logs to 3rd party\
            \ log archive and analysis services (i.e Splunk, Syslog, Alien Vault USM).\n\
            \  - (Operators and administrators only) Access the firehose, which includes\
            \ the combined stream of logs from all apps, plus metrics data from CF\
            \ components\n- Syslog and Syslog_aggregator are used for system logging\
            \ and provide a mechanism to forward system logs via syslog to a syslog\
            \ server.\n- /healthz and /varz are HTTP endpoints provided by Cloud Foundry\
            \ components used for system monitoring. The endpoints can be polled to\
            \ obtain information on a job\u2019s health and state. \n  - /healthz\
            \ is a basic check that returns an \u2018ok\u2019 message if the job\u2019\
            s running happily.\n  - /varz provides more detailed information about\
            \ the running job. For example, polling /varz on the uaa server returns\
            \ data about java memory usage (amongst other things).\n- The Collector\
            \ is used for monitoring and metrics by collecting data from the /health\
            \ and /var endpoints. It dynamically learns about Cloud Foundry components\
            \ and polls them for monitoring data and provides options to send monitoring\
            \ data to AWS CloudWatch, Datadog, graphite and TSDB.\n- New components\
            \ have been added to the most recent version of Cloud Foundry \n  - CF\
            \ components emit metrics (e.g. the router emits HTTP metrics, such as\
            \ the time taken to service a request).\n  - These metrics are sent to\
            \ agents running on the VMs called \u2018metron\u2019.\n  - The metron\
            \ agents forward these metrics, along with application logs, to \u2018\
            doppler\u2019 servers.\n  - The doppler servers collect and buffer the\
            \ data.\n  - The loggregator traffic controllers expose a new websocket\
            \ endpoint \u2018/firehose\u2019.\n  - When you connect to /firehose,\
            \ a connection is opened up to all doppler servers.\n  - All logs and\
            \ metrics for all apps and components are then streamed down the connection.\n"
        references:
        - name: Loggregator code
          url: https://github.com/cloudfoundry/loggregator
        - name: Cloud Foundry Logging
          url: https://docs.cloudfoundry.org/running/managing-cf/logging.html
      - governors:
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Acccount Managment Flow
          url: Find artifact
        name: User Account and Authentication (UAA) Server
        narative:
          a: "- Cloud Foundry user and role accounts are managed and maintained through\
            \ the UAA Command Line Interface (UAAC). Cloud Foundry uses role-based\
            \ access control with each role granting permissions in either an organization\
            \ or an application space.\n- 18F uses Cloud Foundry\u2019s user accounts\
            \ for individuals within the context of a Cloud Foundry. A user can have\
            \ different roles in different spaces within an org, governing what level\
            \ and type of access they have within that space. The combination of these\
            \ roles defines the user\u2019s overall permissions in the org and within\
            \ specific spaces in that org.  A list of standard cloud foundry user\
            \ account types can be found in Table 9-2. Cloud Foundry User Roles and\
            \ Privileges.\n- Cloud Foundry uses Application security groups (ASGs)\
            \ to act as virtual firewalls to control outbound traffic from the applications\
            \ in the deployment. A security group consists of a list of network egress\
            \ access rules.\n- An administrator can assign one or more security groups\
            \ to a Cloud Foundry deployment or to a specific space in an org within\
            \ a deployment.\n- Cloud Foundry user, organization, and application roles\
            \ and security groups are documented in section 9.3 Types of Users. \n"
          k: "- The Cloud Foundry platform utilizes role based access controls (RBAC)\
            \ for group membership within the platform and does not issue shared/group\
            \ account credentials. \n- 18F adds and removes individual users from\
            \ defined user roles listed in Table 9-2. Cloud Foundry User Roles and\
            \ Privileges.\n"
        references:
        - name: User Account and Authentication (UAA) Server
          url: http://docs.pivotal.io/pivotalcf/concepts/architecture/uaa.html
        - name: Creating and Managing Users with the UAA CLI (UAAC)
          url: http://docs.pivotal.io/pivotalcf/adminguide/uaa-user-management.html
        - name: UAA Roles
          url: https://cf-p1-docs-prod.cfapps.io/pivotalcf/concepts/roles.html
        - name: Cloud Foundry Org Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/organization_access_spec.rb
        - name: Cloud Foundry Space Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/space_access_spec.rb
      meta:
        name: Account Management
    AC-20:
      meta:
        name: Use of External Information Systems
    AC-22:
      meta:
        name: Publicly Accessible Content
    AC-3:
      justifications:
      - governors:
        - name: Roles Used by 18F
          url: Find artifact
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Account Management Flow
          url: Find artifact
        name: Identity and Access Management
        narative: "- 18F follows and implements AWS IAM  best practices by implementing\
          \ the majority of the following&colon;\n  - Create individual accounts for\
          \ anyone that requires access to the AWS infrastructure or APIs or use IAM\
          \ federation from enterprise identity management system\n  - Use groups\
          \ or roles to assign permissions to IAM users\n  - Enable multi factor authentication\
          \ for all IAM users\n  - Use roles for applications that run on EC2 instances\n\
          \  - Delegate by using roles instead of sharing credentials\n  - Rotate\
          \ credentials regularly\n"
        references:
        - name: AWS Identity and Access Management (IAM)
          url: https://aws.amazon.com/iam/
      - name: Application Security Groups
        narative: "- Within the CF PaaS, Cloud Foundry uses security groups to act\
          \ as firewalls to control outbound applications in the deployment. 18F uses\
          \ Cloud Foundry ASGs to specify egress access rules for its applications.\
          \ This functionality enables 18F to securely restrict application outbound\
          \ traffic to predefined routes.       \n- Cloud Foundry evaluates security\
          \ groups and other network traffic rules in a strict priority order. Cloud\
          \ Foundry returns an allow, deny, or reject result for the first rule that\
          \ matches the outbound traffic request parameters, and does not evaluate\
          \ any lower-priority rules\n- Cloud Foundry implements network traffic rules\
          \ using Linux iptables on the component VMs. Operators can configure rules\
          \ to prevent system access from external networks and between internal components,\
          \ and to restrict applications from establishing connections over the DEA\
          \ network interface.\n"
        references:
        - name: Application Security Groups
          url: http://docs.cloudfoundry.org/adminguide/app-sec-groups.html
      meta:
        name: Access Enforcement
    AC-7:
      meta:
        name: Unsuccessful Logon Attempts
    AC-8:
      meta:
        name: System Use Notification
    AT-1:
      justifications:
      - name: Security Awareness Training Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Security Awareness and Training Policy and Procedures
    AT-2:
      meta:
        name: Security Awareness Training
    AT-3:
      meta:
        name: Role-Based Security Training
    AT-4:
      meta:
        name: Security Training Records
    AU-1:
      justifications:
      - name: Audit and Accountability Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Audit and Accountability Policy and Procedures
    AU-11:
      meta:
        name: Audit Record Retention
    AU-12:
      meta:
        name: Audit Generation
    AU-2:
      justifications:
      - name: CloudTrail
        narative:
          a: "- 18F has implemented AWS CloudTrail for its account monitoring. It\
            \ provides visibility into user activity by recording API calls made on\
            \ an AWS account. CloudTrail records important information about each\
            \ API call, including the name of the API, the identity of the caller,\
            \ the time of the API call, the request parameters, and the response elements\
            \ returned by the AWS service. This information helps 18F track changes\
            \ made to its AWS resources and to troubleshoot operational issues.  \n\
            - CloudTrail delivers API call information by depositing log files in\
            \ an Amazon S3 bucket.  Each log file can contain multiple events, and\
            \ each event represents an API call.\n"
          d: "- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon\
            \ EBS, and Amazon VPC that captures API calls and delivers the log files\
            \ to an Amazon S3 bucket. By default, all CloudTrail  log files are encrypted\
            \ by using Amazon S3 server-side encryption (SSE)\n- When CloudTrail logging\
            \ is enabled, API calls made to Amazon EC2, Amazon EBS, and Amazon VPC\
            \ actions are tracked in log files, along with any other AWS service records.\
            \ CloudTrail determines when to create and write to a new file based on\
            \ a specified time period and file size.\n- Every log entry contains information\
            \ about who generated the request. The user identity information in the\
            \ log helps  determine whether the request was made with root or IAM user\
            \ credentials, with temporary security credentials for a role or federated\
            \ user, or by another AWS service. \n- CloudTrail publish Amazon SNS notifications\
            \ when new log files are delivered for 18F staff to review upon log file\
            \ delivery.\n"
        references:
        - name: AWS Cloud Trail Documentation
          url: https://aws.amazon.com/cloudtrail/
      - name: Amazon Elastic Compute Cloud
        narative:
          a: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
            EBS, and Amazon VPC that captures API calls and delivers the log files
            to an Amazon S3 bucket. By default, all CloudTrail log files are encrypted
            by using Amazon S3 server-side encryption (SSE)

            - With CloudTrail logging enabled, API calls made to Amazon EC2, Amazon
            EBS, and Amazon VPC actions are tracked in log files, along with any other
            AWS service records. CloudTrail determines when to create and write to
            a new file based on a specified time period and file size.

            '
          d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
            EBS, and Amazon VPC that captures API calls and delivers the log files
            to an Amazon S3 bucket. By default, all CloudTrail  log files are encrypted
            by using Amazon S3 server-side encryption (SSE)

            - When CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon
            EBS, and Amazon VPC actions are tracked in log files, along with any other
            AWS service records. CloudTrail determines when to create and write to
            a new file based on a specified time period and file size

            '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: S3
        narative:
          a: '- CloudTrail delivers API call information by depositing log files in
            an Amazon S3 bucket.  Each log file can contain multiple events, and each
            event represents an API call

            - 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
            EBS, and Amazon VPC that captures API calls and delivers the log files
            to an Amazon S3 bucket. By default, all CloudTrail log files are encrypted
            by using Amazon S3 server-side encryption (SSE)

            '
          d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
            EBS, and Amazon VPC that captures API calls and delivers the log files
            to an Amazon S3 bucket. By default, all CloudTrail  log files are encrypted
            by using Amazon S3 server-side encryption (SSE)

            '
        references:
        - name: Amazon S3
          url: https://aws.amazon.com/s3/
      - governors:
        - name: Loggregator Diagram
          url: https://raw.githubusercontent.com/cloudfoundry/loggregator/develop/docs/loggregator.png
        name: Loggregator
        narative:
          a: "Security Event Logging and Auditing\n  - For operators, Cloud Foundry\
            \ provides an audit trail through the bosh tasks command. This command\
            \ shows all actions that and operator has taken with the platform. Additionally,\
            \ operators can redirect Cloud Foundry component logs to a standard syslog\
            \ server using the syslog_daemon_config property in the metron_agent job\
            \ of cf-release.\n  - For users, Cloud Foundry records an audit trail\
            \ of all relevant API invocations of and app. The CLI command cf events\
            \ returns this information.\n  - Loggregator/doppler, the Cloud Foundry\
            \ component responsible for logging, provides a stream of log output from\
            \ hosted applications and from Cloud Foundry system components that interact\
            \ with applications during updates and execution. Loggregator allows users\
            \ to:\n    - Tail their application logs.\n    - Dump a recent set of\
            \ application logs (where recent is a configurable number of log packets).\n\
            \    - Continually drain their application logs to 3rd party log archive\
            \ and analysis services.\n    - (Operators and administrators only) Access\
            \ the firehose, which includes the combined stream of logs from all apps,\
            \ plus metrics data from CF components.\n"
          d: '- For operators, Cloud Foundry provides an audit trail through the bosh
            tasks command. This command shows all actions that and operator has taken
            with the platform. Additionally, operators can redirect Cloud Foundry
            component logs to a standard syslog server using the syslog_daemon_config
            property in the metron_agent job of cf-release.

            - For users, Cloud Foundry records an audit trail of all relevant API
            invocations of and app. The CLI command cf events returns this information.

            - Loggregator, the Cloud Foundry component responsible for logging, provides
            a stream of log output from 18F applications and from Cloud Foundry system
            components that interact with your app during updates and execution.

            - By default, Loggregator streams logs to a terminal. 18F will drain logs
            to a third-party log management service such as AlienVault USM and AWS
            Cloudtrail.

            - Cloud Foundry gathers and stores logs in a best-effort manner. If a
            client is unable to consume log lines quickly enough, the Loggregator
            buffer may need to overwrite some lines before the client has consumed
            them. a syslog drain or a CLI tail can usually keep up with the flow of
            application logs.

            '
        references:
        - name: Loggregator code
          url: https://github.com/cloudfoundry/loggregator
        - name: Cloud Foundry Logging
          url: https://docs.cloudfoundry.org/running/managing-cf/logging.html
      meta:
        name: Audit Events
    AU-3:
      meta:
        name: Content of Audit Records
    AU-4:
      meta:
        name: Audit Storage Capacity
    AU-5:
      meta:
        name: Response to Audit Processing Failures
    AU-6:
      justifications:
      - governors:
        - name: Loggregator Diagram
          url: https://raw.githubusercontent.com/cloudfoundry/loggregator/develop/docs/loggregator.png
        name: Loggregator
        narative:
          a: "- GSA Order CIO P 2100.1 states audit records must be reviewed frequently\
            \ for signs of unauthorized activity or other security events.\n- By default,\
            \ Loggregator streams logs to a terminal. 18F will drain logs to a third-party\
            \ log management service such as AlienVault USM and AWS CloudTrail \n\
            - Cloud Foundry logs are captured in multiple tables and log files.  These\
            \ will be reviewed weekly and if discovery of anomalous audit log content\
            \ which appears to indicate a breach are handled according to the GSA\
            \ Security Incident Handling Guide: CIO IT Security 01-02 Revision 7 (August\
            \ 18, 2009) requirements. "
        references:
        - name: Loggregator code
          url: https://github.com/cloudfoundry/loggregator
        - name: Cloud Foundry Logging
          url: https://docs.cloudfoundry.org/running/managing-cf/logging.html
      meta:
        name: Audit Review, Analysis, and Reporting
    AU-8:
      meta:
        name: Time Stamps
    AU-9:
      meta:
        name: Protection of Audit Information
    CA-1:
      justifications:
      - name: Security Assessment and Authorization Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Security Assessment and Authorization Policies and Procedures
    CA-2:
      meta:
        name: Security Assessments
    CA-2 (1):
      meta:
        name: Security Assessments | Independent Assessors
    CA-3:
      meta:
        name: System Interconnections
    CA-5:
      meta:
        name: Plan of Action and Milestones
    CA-6:
      meta:
        name: Security Authorization
    CA-7:
      meta:
        name: Continuous Monitoring
    CA-9:
      meta:
        name: Internal System Connections
    CM-1:
      justifications:
      - name: Configuration Management  Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Configuration Management Policy and Procedures
    CM-10:
      meta:
        name: Software Usage Restrictions
    CM-11:
      meta:
        name: User-Installed Software
    CM-2:
      justifications:
      - name: AlienVault
        narative: AlienVault USM for AWS is provided by the vendor as a secure hardened
          AMI image that is deployed using a cloudformation template.
        references:
        - name: AlienVault Website
          url: http://www.alienvault.com
      - name: Amazon Machine Images
        narative: '- Linux instances are based on the standard AWS AMI images with
          configuration to GSA requirements based on secure configurations documented
          in CM-6.

          - AlienVault USM for AWS is provided by the vendor as a secure hardened
          AMI image that is deployed using a cloudformation template.

          - NIST guidance, best practices, CIS benchmarks along with standard and
          hardened Operating System AMIs have been utilized.

          - DevOps maintain copies of the latest Production Software Baseline, which
          includes the following elements: Manufacturer, Type, Version number, Software,
          Databases, and Stats.

          '
        references:
        - name: Amazon Machine Images
          url: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
      - name: AWS Service Catalog
        narative: AWS Service Catalog allows 18F to centrally manage commonly deployed
          IT services, and helps achieve consistent governance and meet compliance
          requirements, while enabling users to quickly deploy only the approved IT
          services they need.
        references:
        - name: AWS Service Catalog Documentation
          url: https://aws.amazon.com/servicecatalog/
      - name: Cloud Formation
        narative: '- DevOps maintain baseline configurations for VPC, EBS, EC2 instances
          and AMIs. AWS Cloud Formation templates help 18F maintain a strict configuration
          management scheme of the cloud infrastructure. If an error or misconfiguration
          of the infrastructure or associated security mechanism (security groups,
          NACLs) is detected, the administrators can analyze the current infrastructure
          templates; compare with previous versions, and redeploy the configurations
          to a known and approved state.

          - AWS Cloud Formation templates are the approved baseline for all changes
          to the infrastructure and simplify provisioning and management on AWS. They
          provide an automated method to assess the status of an operational infrastructure
          against an approved baseline.

          '
        references:
        - name: What is AWS CloudFormation?
          url: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html
      - name: Amazon Elastic Block Store
        narative: DevOps maintain baseline configurations for VPC, EBS, EC2 instances
          and AMIs. AWS Cloud Formation templates help 18F maintain a strict configuration
          management scheme of the cloud infrastructure. If an error or misconfiguration
          of the infrastructure or associated security mechanism (security groups,
          NACLs) is detected, the administrators can analyze the current infrastructure
          templates; compare with previous versions, and redeploy the configurations
          to a known and approved state.
        references:
        - name: Amazon Elastic Block Store
          url: https://aws.amazon.com/ebs/
      - name: Amazon Elastic Compute Cloud
        narative: DevOps maintain baseline configurations for VPC, EBS, EC2 instances
          and AMIs. AWS Cloud Formation templates help 18F maintain a strict configuration
          management scheme of the cloud infrastructure. If an error or misconfiguration
          of the infrastructure or associated security mechanism (security groups,
          NACLs) is detected, the administrators can analyze the current infrastructure
          templates; compare with previous versions, and redeploy the configurations
          to a known and approved state.
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: Manifests
        narative: Configure UAA clients and users using a standard BOSH manifest for
          cloud Foundry Deployment, Limit and manage these clients and users as you
          would any other kind of privileged account.
        references:
        - name: Deploying with Application Manifests
          url: https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html
      meta:
        name: Baseline Configuration
    CM-4:
      meta:
        name: Security Impact Analysis
    CM-6:
      justifications:
      - name: Amazon Machine Images
        narative:
          a: '- DevOps and Security Engineers maintain the baseline configuration
            for VPC, EBS and AMIs.  Best practices, FISMA compliant AMIs, and hardened
            cloud formation templates are utilized as there are no benchmarks available.

            - The organization uses FISMA compliant and hardened AMIs within its AWS
            infrastructure

            '
        references:
        - name: Amazon Machine Images
          url: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
      - name: Amazon Elastic Block Store
        narative:
          a: '- DevOps and Security Engineers maintain the baseline configuration
            for VPC, EBS and AMIs.  Best practices, FISMA compliant AMIs are utilized
            as there are no benchmarks available.

            '
        references:
        - name: Amazon Elastic Block Store
          url: https://aws.amazon.com/ebs/
      - name: Nessus
        narative:
          d: "Nessus and AlienVault USM Joval scans are performed at least on a quarterly\
            \ basis in the event that no enhancements or upgrades are performed. Both\
            \ tools meet NIST\u2019s SCAP 1.2 requirements, satisfying OMB Mandate\
            \ M-08-22 and associated procurement requirements. SCAP scans are performed\
            \ weekly and monthly to ensure no unauthorized changes, enhancements or\
            \ upgrades are performed."
        references:
        - name: Nessus Website
          url: http://www.tenable.com/products/nessus-vulnerability-scanner
      - name: S3
        narative:
          a: Updates to new BOSH stemcells are located and stored within Amazon S3
            http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells
        references:
        - name: Amazon S3
          url: https://aws.amazon.com/s3/
      - name: BOSH Stemcells
        narative: BOSH Stemcells are used for the standard baseline OS images and
          software vulnerability management updates. Updates to new BOSH stemcells
          are located and stored within Amazon S3. The specifications of the current
          release of BOSH stemcells are located on GitHub. DevOps implements Cloud
          Foundry standard BOSH stemcells for baseline OS configuration.
        references:
        - name: Bosh StemCells
          url: https://bosh.io/stemcells
        - name: Bosh updates
          url: https://github.com/cloudfoundry/bosh/blob/master/bosh-stemcell/OS_IMAGES.md
        - name: New BOSH stemcells
          url: http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells
        - name: Bosh Ubuntu trusty specs
          url: https://github.com/cloudfoundry/bosh/blob/master/bosh-stemcell/spec/stemcells/ubuntu_trusty_spec.rb
      - name: Manifests
        narative: Cloud Foundry configuration settings are documented within the deployment
          manifest on the 18F GitHub and Cloud Foundry sites. DevOps implements manifest
          templates written in yml to automate deployment of multiple applications
          at once and the platform within AWS with consistency and reproducibility.
        references:
        - name: Deploying with Application Manifests
          url: https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html
      meta:
        name: Configuration Settings
    CM-7:
      meta:
        name: Least Functionality
    CM-8:
      justifications:
      - name: AlienVault
        narative: AlienVault USM is currently deployed and used by 18F to facilitate
          asset management, along with other operations activities, on a real-time
          ongoing basis.
        references:
        - name: AlienVault Website
          url: http://www.alienvault.com
      - name: AWS Config
        narative:
          a: '- AWS Config provides a detailed inventory of all 18F AWS resources
            and their current configuration, and continuously records configuration
            changes (e.g., the value of tags on Amazon EC2 instances, ingress/egress
            rules of security groups, and Network ACL rules for VPCs).

            - Using AWS Config, 18F can export a complete inventory of AWS resources
            with all configuration details, determine how a resource was configured
            at any point in time, and get notified via Amazon SNS when the configuration
            of a resource changes.

            - AWS Config can provide configuration snapshots, which is a point-in-time
            capture of all 18F resources and their configurations. Configuration snapshots
            are generated on demand via the AWS CLI, or API, and delivered to an Amazon
            S3 bucket that is specified

            '
      - name: Amazon Elastic Compute Cloud
        narative:
          a: '- AWS Config provides a detailed inventory of all 18F AWS resources
            and their current configuration, and continuously records configuration
            changes (e.g., the value of tags on Amazon EC2 instances, ingress/egress
            rules of security groups, and Network ACL rules for VPCs).

            '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: S3
        narative:
          a: AWS Config can provide configuration snapshots, which is a point-in-time
            capture of all 18F resources and their configurations. Configuration snapshots
            are generated on demand via the AWS CLI, or API, and delivered to an Amazon
            S3 bucket that is specified
        references:
        - name: Amazon S3
          url: https://aws.amazon.com/s3/
      - name: VisualOps
        narative:
          a: '- The VisualOps Cloud management tool is used to provide a visual, real-time
            and automated representation of the AWS infrastructure and applications
            within the environment.

            '
        references:
        - name: VisualOps
          url: https://www.visualops.io/
      meta:
        name: Information System Component Inventory
    CP-1:
      justifications:
      - name: Contingency Planning Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Contingency Planning Policy and Procedures
    CP-10:
      meta:
        name: Information System Recovery and Reconstitution
    CP-2:
      meta:
        name: Contingency Plan
    CP-3:
      meta:
        name: Contingency Training
    CP-4:
      meta:
        name: Contingency Plan Testing
    CP-9:
      meta:
        name: Information System Backup
    IA-1:
      justifications:
      - name: Identification and Authentication Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Identification and Authentication Policy and Procedures
    IA-2:
      justifications:
      - name: Amazon Elastic Compute Cloud
        narative: '- Additional temporary permission are delegated with the IAM roles
          usually for applications that run on EC2 Instanc.es in order to access AWS
          resources (i.e. Amazon S3 buckets, DynamoDB data)

          '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - governors:
        - name: Roles Used by 18F
          url: Find artifact
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Account Management Flow
          url: Find artifact
        name: Identity and Access Management
        narative: '- All users have individually unique identifiers to access and
          authenticate to the AWS environment through the AWS management console.

          - 18F AWS IAM users are placed into IAM roles based on their assigned roles
          and permissions

          - Additional temporary permission are delegated with the IAM roles usually
          for applications that run on EC2 Instanc.es in order to access AWS resources
          (i.e. Amazon S3 buckets, DynamoDB data)

          - All user accounts for 18F staff are maintained within the 18F AWS Environment.

          - Shared or group authenticators are not utilized; Service accounts are
          implemented as Managed Services Accounts within AWS.

          '
        references:
        - name: AWS Identity and Access Management (IAM)
          url: https://aws.amazon.com/iam/
      - name: S3
        narative:
          a: Additional temporary permission are delegated with the IAM roles usually
            for applications that run on EC2 Instanc.es in order to access AWS resources
            (i.e. Amazon S3 buckets, DynamoDB data)
        references:
        - name: Amazon S3
          url: https://aws.amazon.com/s3/
      - governors:
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Acccount Managment Flow
          url: Find artifact
        name: User Account and Authentication (UAA) Server
        narative: '- The UAA is the identity management service for Cloud Foundry.
          Its primary role is as an OAuth2 provider, issuing tokens for client applications
          to use when they act on behalf of Cloud Foundry users. In collaboration
          with the login server, it authenticates users with their Cloud Foundry credentials,
          and act as a Single Sign-On (SSO) service using those credentials (or others).
          It has endpoints for managing user accounts and for registering OAuth2 clients,
          as well as various other management functions.

          - All users have individually unique identifiers to access and authenticates  to
          the environment

          - Shared or group authenticators are not utilized, with the exception of
          a root administrative account. There are only two authorized users from
          the DevOps team who has access to the root administrative account.

          '
        references:
        - name: User Account and Authentication (UAA) Server
          url: http://docs.pivotal.io/pivotalcf/concepts/architecture/uaa.html
        - name: Creating and Managing Users with the UAA CLI (UAAC)
          url: http://docs.pivotal.io/pivotalcf/adminguide/uaa-user-management.html
        - name: UAA Roles
          url: https://cf-p1-docs-prod.cfapps.io/pivotalcf/concepts/roles.html
        - name: Cloud Foundry Org Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/organization_access_spec.rb
        - name: Cloud Foundry Space Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/space_access_spec.rb
      meta:
        name: Identification and Authentication (Organizational Users)
    IA-2 (1):
      justifications:
      - name: Amazon Elastic Compute Cloud
        narative: '- Although the EC2 instances do not natively have a MFA mechanism,
          to gain access a privileged user would need to first log into the AWS Management
          console and provide the authentication code from their AWS MFA device.

          '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: AWS Multi-Factor Authentication
        narative: '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra
          layer of security for login access to the AWS management console. With MFA
          enabled, all 18F users are prompted for a username and password, as well
          as the authentication code from their AWS MFA device.

          - This service has been configured for 18F administrative accounts in AWS
          IAM.

          '
        references:
        - name: AWS Multi-Factor Authentication
          url: https://aws.amazon.com/iam/details/mfa/
      meta:
        name: Identification and Authentication (Organizational Users) | Network Access
          to Privileged Accounts
    IA-2 (12):
      justifications:
      - name: Amazon Elastic Compute Cloud
        narative: '- Although the EC2 instances do not utilize PIV credentials, Agency
          privileged/non-privilege users need to first log into GSA GFEs and network
          using their PIV credentials, which does leverage x509 certificates combined
          with usernames and one-time passwords to provide multi-factor authentication.

          '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      meta:
        name: Identification and Authentication (Organizational Users) | Acceptance
          of PIV Credentials
    IA-4:
      meta:
        name: Identifier Management
    IA-5:
      meta:
        name: Authenticator Management
    IA-5 (1):
      meta:
        name: Authenticator Management | Password-Based Authentication
    IA-5 (11):
      meta:
        name: Authenticator Management | Hardware Token-Based Authentication
    IA-6:
      meta:
        name: Authenticator Feedback
    IA-7:
      meta:
        name: Cryptographic Module Authentication
    IA-8:
      meta:
        name: Identification and Authentication (Non-Organizational Users)
    IA-8 (1):
      meta:
        name: Identification and Authentication (Non-Organizational Users) | Acceptance
          of PIV Credentials from Other Agencies
    IA-8 (2):
      meta:
        name: Identification and Authentication (Non-Organizational Users) | Acceptance
          of Third-Party Credentials
    IA-8 (3):
      meta:
        name: Identification and Authentication (Non-Organizational Users) | Use of
          FICAM-Approved Products
    IA-8 (4):
      meta:
        name: Identification and Authentication (Non-Organizational Users) | Use of
          FICAM-Issued Profiles
    IR-1:
      justifications:
      - name: Incident Response for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Incident Response Policy and Procedures
    IR-2:
      meta:
        name: Incident Response Training
    IR-4:
      meta:
        name: Incident Handling
    IR-5:
      meta:
        name: Incident Monitoring
    IR-6:
      meta:
        name: Incident Reporting
    IR-7:
      meta:
        name: Incident Response Assistance
    IR-8:
      meta:
        name: Incident Response Plan
    MA-1:
      justifications:
      - name: System Maintenance Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: System Maintenance Policy and Procedures
    MA-2:
      meta:
        name: Controlled Maintenance
    MA-4:
      meta:
        name: Nonlocal Maintenance
    MA-5:
      meta:
        name: Maintenance Personnel
    MP-1:
      justifications:
      - name: Media Protection Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Media Protection Policy and Procedures
    MP-2:
      meta:
        name: Media Access
    MP-6:
      meta:
        name: Media Sanitization
    MP-7:
      meta:
        name: Media Use
    PE-1:
      justifications:
      - name: Physical and Environmental Protection Policy for 18F
        narative: 18F Policy
      meta:
        name: Physical and Environmental Protection Policy and Procedures
    PE-12:
      meta:
        name: Emergency Lighting
    PE-13:
      meta:
        name: Fire Protection
    PE-14:
      meta:
        name: Temperature and Humidity Controls
    PE-15:
      meta:
        name: Water Damage Protection
    PE-16:
      meta:
        name: Delivery and Removal
    PE-2:
      meta:
        name: Physical Access Authorizations
    PE-3:
      meta:
        name: Physical Access Control
    PE-6:
      meta:
        name: Monitoring Physical Access
    PE-8:
      meta:
        name: Visitor Access Records
    PL-1:
      justifications:
      - name: Security Planning Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Security Planning Policy and Procedures
    PL-2:
      meta:
        name: System Security Plan
    PL-4:
      meta:
        name: Rules of Behavior
    PS-1:
      justifications:
      - name: Personnel Security Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Personnel Security Policy and Procedures
    PS-2:
      meta:
        name: Position Risk Designation
    PS-3:
      meta:
        name: Personnel Screening
    PS-4:
      meta:
        name: Personnel Termination
    PS-5:
      meta:
        name: Personnel Transfer
    PS-6:
      meta:
        name: Access Agreements
    PS-7:
      meta:
        name: Third-Party Personnel Security
    PS-8:
      meta:
        name: Personnel Sanctions
    RA-1:
      justifications:
      - name: Risk Assessment Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: Risk Assessment Policy and Procedures
    RA-2:
      meta:
        name: Security Categorization
    RA-3:
      meta:
        name: Risk Assessment
    RA-5:
      justifications:
      - name: AlienVault
        narative: AlienVault USM for AWS runs AWS friendly Authenticated vulnerability
          scans within the AWS infrastructure
        references:
        - name: AlienVault Website
          url: http://www.alienvault.com
      - name: Amazon Machine Images
        narative:
          a: '- 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment
            weekly based on IP ranges in use. These scans include network discovery
            and vulnerability checks of operating systems, server software, and any
            supporting components or applications. Scans are automatically compared
            to previous scans to identify new vulnerabilities or changes which resolve
            previously identified vulnerabilities. Nessus reports are reviewed at
            least weekly and appropriate actions taken on discovery of vulnerabilities.

            - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell
            is built.  This scan determines baseline posture used to contribute to
            decision of Production acceptance.  Additionally, this tool is used to
            execute CIS benchmark compliance scans when actively working to address
            configuration and hardening requirements.

            - OWASP Zap is used to conduct web Application scanning primarily for
            the OWASP Top 10. 18F uses it as an integrated security testing tool for
            finding vulnerabilities in web applications. 18F will provide more automated
            functionally of security tests using OWASP ZAP and Jenkins for its  software
            development lifecycle and continuous integration functions

            - AlienVault USM for AWS runs AWS friendly Authenticated vulnerability
            scans within the 18F AWS infrastructure and does not require permission
            from AWS to run scan within its Virtual Private Cloud (VPC)

            '
        references:
        - name: Amazon Machine Images
          url: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
      - name: Nessus
        narative:
          a: '- Nessus will be used conduct internal scanning of its VPC and private
            subnets within the 18F Virtual Private Cloud.

            - 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment
            weekly based on IP ranges in use. These scans include network discovery
            and vulnerability checks of operating systems, server software, and any
            supporting components or applications. Scans are automatically compared
            to previous scans to identify new vulnerabilities or changes which resolve
            previously identified vulnerabilities. Nessus reports are reviewed at
            least weekly and appropriate actions taken on discovery of vulnerabilities.

            - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell
            is built.  This scan determines baseline posture used to contribute to
            decision of Production acceptance.  Additionally, this tool is used to
            execute CIS benchmark compliance scans when actively working to address
            configuration and hardening requirements.

            '
          b: '- Nessus, and AlienVault USM for AWS utilize tools and techniques that
            promote interoperability such as Common Vulnerability Scoring System v2
            (CVSS2), Common Platform Enumeration (CPE), and Common Vulnerability Enumeration
            (CVE). Tenable SecurityCenter is able to output reports in CyberScope
            format to meet NIST, DHS, and GSA reporting requirements.

            '
          c: '- AlienVault USM for AWS, OWASP Zap and Tenable Nessus reports are reviewed
            and analyzed at least weekly and appropriate actions taken on discovery
            of vulnerabilities within the 18F Cloud Infrastructure and applications
            and from security control assessments conducted on its information systems.

            '
        references:
        - name: Nessus Website
          url: http://www.tenable.com/products/nessus-vulnerability-scanner
      - name: OWASP Zap
        narative:
          a: "OWASP Zap is used to conduct web Application scanning primarily \nfor\
            \ the OWASP Top 10. 18F uses it as an integrated security testing tool\
            \ for finding vulnerabilities in web applications. 18F will provide more\
            \ automated functionally of security tests using OWASP ZAP and Jenkins\
            \ for its \nsoftware development lifecycle and continuous integration\
            \ functions.\n"
          b: "OWASP Zap is used for web application scanning of hosted websites \n\
            and web based applications. It scans for the OWASP TOP 10 vulnerabilities\
            \ \nand utilize tools and techniques that promote interoperability such\
            \ \nas Common Vulnerability Scoring System v2 (CVSS2), Common Platform\
            \ \nEnumeration (CPE), and Common Vulnerability Enumeration (CVE). \n"
          c: "OWASP Zap reports are reviewed and analyzed at least weekly and \nappropriate\
            \ actions taken on discovery of vulnerabilities within \nthe 18F Cloud\
            \ Infrastructure and applications and from security \ncontrol assessments\
            \ conducted on its information systems.\n"
        references:
        - name: OWASP Zap Site
          url: https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project
      meta:
        name: Vulnerability Scanning
    SA-1:
      justifications:
      - name: System and Services Acquisition Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: System and Services Acquisition Policy and Procedures
    SA-2:
      meta:
        name: Allocation of Resources
    SA-3:
      meta:
        name: System Development Life Cycle
    SA-4:
      meta:
        name: Acquisition Process
    SA-4 (10):
      meta:
        name: Acquisition Process | Use of Approved PIV Products
    SA-5:
      meta:
        name: Information System Documentation
    SA-9:
      meta:
        name: External Information System Services
    SC-1:
      justifications:
      - name: System and Communications Protection Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: System and Communications Protection Policy and Procedures
    SC-12:
      meta:
        name: Cryptographic Key Establishment and Management
    SC-13:
      justifications:
      - name: AlienVault
        narative: AlienVault USM for AWS uses TLS v1.2 with 4096 bit keys for data
          in transit and connections.
        references:
        - name: AlienVault Website
          url: http://www.alienvault.com
      - governors:
        - name: Access Control Policy Section 3
          url: Find artifact
        - name: Acccount Managment Flow
          url: Find artifact
        name: User Account and Authentication (UAA) Server
        narative: All traffic from the public internet to the Cloud Controller and
          UAA happens over HTTPS and operators configure encryption of the identity
          store in the UAA
        references:
        - name: User Account and Authentication (UAA) Server
          url: http://docs.pivotal.io/pivotalcf/concepts/architecture/uaa.html
        - name: Creating and Managing Users with the UAA CLI (UAAC)
          url: http://docs.pivotal.io/pivotalcf/adminguide/uaa-user-management.html
        - name: UAA Roles
          url: https://cf-p1-docs-prod.cfapps.io/pivotalcf/concepts/roles.html
        - name: Cloud Foundry Org Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/organization_access_spec.rb
        - name: Cloud Foundry Space Access
          url: https://github.com/cloudfoundry/cloud_controller_ng/blob/master/spec/unit/access/space_access_spec.rb
      meta:
        name: Cryptographic Protection
    SC-15:
      meta:
        name: Collaborative Computing Devices
    SC-20:
      meta:
        name: Secure Name / Address Resolution Service (Authoritative Source)
    SC-21:
      meta:
        name: Secure Name / Address Resolution Service (Recursive or Caching Resolver)
    SC-22:
      meta:
        name: Architecture and Provisioning for Name / Address Resolution Service
    SC-39:
      meta:
        name: Process Isolation
    SC-5:
      meta:
        name: Denial of Service Protection
    SC-7:
      justifications:
      - name: Access Control List
        narative:
          a: '- ACLs, or traffic flow policies, are established on each managed interface,
            which manage and enforce the flow of traffic.

            '
        references:
        - name: Access Control List Overview
          url: http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html
      - name: Amazon Elastic Compute Cloud
        narative:
          a: "- Man in the Middle (MITM) Attacks. All of the AWS APIs are available\
            \ via SSL-protected endpoints which provide server authentication. Amazon\
            \ EC2 AMIs automatically generate new SSH host certificates on first boot\
            \ and log them to the instance\u2019s console. 18F can then use the secure\
            \ APIs to call the console and access the host certificates before logging\
            \ into the instance for the first time. 18F uses SSL for all interactions\
            \ with AWS.\n- IP Spoofing. Amazon EC2 instances cannot send spoofed network\
            \ traffic. The AWS-controlled, host-based firewall infrastructure will\
            \ not permit an instance to send traffic with a source IP or MAC address\
            \ other than its own.\n- Amazon EC2 provides a complete firewall solution;\
            \ this mandatory inbound firewall is configured in a default deny-all\
            \ mode and Amazon EC2 customers must explicitly open the ports needed\
            \ to allow inbound traffic. The traffic may be restricted by protocol,\
            \ by service port, as well as by source IP address (individual IP or Classless\
            \ Inter-Domain Routing (CIDR) block).\n"
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: Sophos UTM
        narative:
          a: '- Sophos UTM 9 for AWS is deployed and configured on all instances

            '
          b: '- Sophos UTM 9 Endpoint Protection is deployed and configured on all
            instances.

            '
        references:
        - name: Sophos UTM
          url: https://www.sophos.com/en-us/support/documentation/sophos-utm.aspx
      - name: Amazon Virtual Private Cloud
        narative:
          b: "- 18F utilizes the AWS Virtual Private Cloud (VPC), which provides a\
            \ private subnet within the AWS cloud. Each VPC is configured to utilize\
            \ Routing Rules, Subnet Rules, and Security Group Rules. Each of these\
            \ controls must have appropriate rules and routes in-place before any\
            \ external service is able to reach a host within AWS.\n  - Each VPC is\
            \ configured to utilize Routing Tables, and Security Groups.  Each of\
            \ these controls must have appropriate rules and routes in-place before\
            \ any external service is able to reach a host within Cloud Foundry.\n\
            \  - Sophos UTM 9 Endpoint Protection is deployed and configured on all\
            \ instances.\n  - Host Based Firewall rules are enforced to provide security\
            \ in depth\n  - Each Amazon VPC is a distinct, isolated network within\
            \ the cloud; network traffic within each Amazon VPC is isolated from all\
            \ other Amazon VPCs\n"
        references:
        - name: Amazon VPC
          url: https://aws.amazon.com/vpc/
      - name: Application Security Groups
        narative:
          a: '- Cloud Foundry implements network traffic rules using Linux iptables
            on the component VMs. Operators can configure rules to prevent system
            access from external networks and between internal components, and to
            restrict applications from establishing connections over the DEA network
            interface.

            - Cloud Foundry recommends that you use Cloud Foundry ASGs to specify
            egress access rules for your applications. This functionality enables
            you to more securely restrict application outbound traffic to predefined
            routes.

            - Spoofing: If an IP, MAC, or ARP spoofing attack bypasses the physical
            firewall for the deployment, Cloud Foundry network traffic rules help
            prevent the attack from accessing application containers. Cloud Foundry
            uses application isolation, operating system restrictions, and encrypted
            connections to further mitigate risk.

            '
        references:
        - name: Application Security Groups
          url: http://docs.cloudfoundry.org/adminguide/app-sec-groups.html
      meta:
        name: Boundary Protection
    SI-1:
      justifications:
      - name: System and Information Integrity Policy for 18F
        narative: 18F Policy
        references:
        - name: Policy Document
          url: https://drive.google.com/drive/u/1/folders/0B6fPl5s12igNfnhnZWJqQVluNUxybWo5WVQwaHUwN29qRmVaQlczN0tpVUZEa25WZFdsTjg
      meta:
        name: System and Information Integrity Policy and Procedures
    SI-12:
      meta:
        name: Information Handling and Retention
    SI-2:
      justifications:
      - name: Nessus
        narative:
          a: '- Flaw identification is accomplished via Nessus, AlienVault USM, OWASP
            Zap, and Code Climate static code analysis.  Nessus is a vulnerability,
            configuration, and compliance scanner.

            '
        references:
        - name: Nessus Website
          url: http://www.tenable.com/products/nessus-vulnerability-scanner
      - name: OWASP Zap
        narative:
          a: 'OWASP Zap (Web Application scanner and penetration test tool) for monthly
            scanning of all web applications that reside within Cloud Foundry. Upon
            implementation of the application, authenticated (Web Application) scans
            will be run on Test instances of the code every major release and minor
            releases when the release contains a change with a potential security
            impact.  OWASP Zap reports are reviewed after each scan and appropriate
            actions taken on discovery of vulnerabilities.

            '
        references:
        - name: OWASP Zap Site
          url: https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project
      - name: BOSH Stemcells
        narative: Cloud Foundry manages software vulnerability using releases and
          BOSH stemcells. New Cloud Foundry releases located at https:/github.com/cloudfoundry/cf-release,
          are created with updates to address code issues, while new stemcells are
          created with patches for the latest security fixes to address any underlying
          operating system issues.
        references:
        - name: Bosh StemCells
          url: https://bosh.io/stemcells
        - name: Bosh updates
          url: https://github.com/cloudfoundry/bosh/blob/master/bosh-stemcell/OS_IMAGES.md
        - name: New BOSH stemcells
          url: http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells
        - name: Bosh Ubuntu trusty specs
          url: https://github.com/cloudfoundry/bosh/blob/master/bosh-stemcell/spec/stemcells/ubuntu_trusty_spec.rb
      meta:
        name: Flaw Remediation
    SI-3:
      meta:
        name: Malicious Code Protection
    SI-4:
      justifications:
      - name: AlienVault
        narative: Alienvault USM for AWS monitors for attacks and indicators of potential
          attacks,  unauthorized local, network, and remote connections using  built-in,
          essential security controls and threat intelligence
        references:
        - name: AlienVault Website
          url: http://www.alienvault.com
      - name: Amazon Machine Images
        narative:
          a: '- All Cloud Foundry EC2 instances will be monitored for attacks and
            unauthorized connections through Alienvault USM

            - AlienVault USM collects and aggregates various audit logs and alerts
            based on abnormal activity or attacks.

            '
        references:
        - name: Amazon Machine Images
          url: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
      - name: Amazon Elastic Compute Cloud
        narative:
          a: '- All Cloud Foundry EC2 instances will be monitored for attacks and
            unauthorized connections through Alienvault USM

            '
          b: '- All Cloud Foundry EC2 instances will be monitored for attacks and
            unauthorized connections through Alienvault USM

            '
        references:
        - name: Amazon Elastic Compute Cloud
          url: https://aws.amazon.com/ec2/
      - name: HM9000
        narative:
          c: "- HM9000 is essential to ensuring that apps running on Cloud Foundry\
            \ remain available. HM9000 restarts applications whenever the DEA running\
            \ an app shuts down for any reason, when Warden kills the app because\
            \ it violated a quota, or when the application process exits with a non-zero\
            \ exit code\n- Cloud Foundry application monitoring component HM9000 (Health\
            \ Manager) has four core responsibilities:\n- Monitor applications to\
            \ determine their state (e.g. running, stopped, crashed, etc.), version,\
            \ and number of instances. HM9000 updates the actual state of an application\
            \ based on heartbeats and droplet.exited messages issued by the DEA running\
            \ the application.\n- Determine applications\u2019 expected state, version,\
            \ and number of instances. HM9000 obtains the desired state of an application\
            \ from a dump of the Cloud Controller database.\n- Reconcile the actual\
            \ state of applications with their expected state. For instance, if fewer\
            \ than expected instances are running, HM9000 will instruct the Cloud\
            \ Controller to start the appropriate number of instances.\n- Direct Cloud\
            \ Controller to take action to correct any discrepancies in the state\
            \ of applications.\n"
        references:
        - name: Health Manager 9000 (HM9000)
          url: https://github.com/cloudfoundry/hm9000
      meta:
        name: Information System Monitoring
    SI-5:
      meta:
        name: Security Alerts, Advisories, and Directives
